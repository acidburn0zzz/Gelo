#
# core: Configure the main component of Gelo
#
[core]
# user_plugin_dir
# The location of additional plugins.  Environment variable expansion is
# performed on this string value.
user_plugin_dir=$HOME/.config/gelo/plugins
# log_file
# The file to log to.  Environment variable expansion is performed on this
# string value.
log_file=$HOME/.config/gelo/gelo.log
# macro_file
# The file in which macros should be saved
macro_file=$HOME/.config/gelo/macros.ini
# broadcast_delay
# How long the system should wait before pushing markers from a source to all of
# the sinks.
broadcast_delay = 8.0

#
# plugin:http_poller: Configure the HTTP poller metadata source
#
[plugin:http_poller]
# poll_url
# The URL to poll for markers
poll_url=http://localhost:8080/nowplaying.xsl
# prefix_file
# The place to look for the now playing prefix.  This is sort of a hack, unless
# I find a better way of doing what I want to accomplish.  If there is any text
# in parenthesis on the first line of this file, it will be added to the marker
# as a special status field.
prefix_file = /tmp/prefix.txt

#
# plugin:tweeter: Configure the Twitter plugin
#
[plugin:tweeter]
########
# NOTE #
########
# These next four keys are commented out.  If you run `gelo-twitter-register`,
# the application will walk you through the process of setting them up with a
# command-line wizard.  If you've done this sort of thing before, feel free to
# set them yourself --- the wizard is not required!
# Also note that due to limiations of Python's ConfigParser, running the wizard
# will eat all of the comments in this file.  If you want to keep them, make a
# copy of the config first, then copy the configured changes from the wizard
# into the duplicate you just made.

# consumer_key
# The Twitter API key for this application, found under Keys and Access Tokens
# on the Twitter Application Management page (apps.twitter.com)
;consumer_key =
# consumer_secret
# The Twitter API secret for this application, found under Keys and Access
# Tokens on the Twitter Application Management page (apps.twitter.com)
;consumer_secret =
# access_token_key
# The Twitter API access token to allow this app to tweet using your account,
# found under Keys and Access Tokens on the Twitter Application Management page
# (apps.twitter.com).
;access_token_key =
# access_token_secret
# The Twitter API access token secret to allow this app to tweet using your
# account, found under Keys and Access Tokens on the Twitter Application
# Management page (apps.twitter.com).
;access_token_secret =

# announce_string
# The string that will be tweeted. "{marker}" will be substituted for the text
# sent by the marker source.  "{special}" will be substituted for " (...)",
# where the ellipsis is any special status attached to the marker.
announce_string=Now Playing{special}: {marker}
# delayed
# Delay this plugin's output by the broadcast delay from above? Default True
;delayed = True

#
# plugin:now_playing_file: A text file that contains a single line with the
# current marker data
#
[plugin:now_playing_file]
# path
# The path to write the now playing file to.  Environment variable expansion is
# performed on this string value.
path=$HOME/Desktop/np.txt
# delayed
# Delay this plugin's output by the broadcast delay from above? Default False
;delayed = False


#
# plugin:irc: Configure the IRC client plugin
#
[plugin:irc]
# nick
# The IRC nick to use when connecting
nick=gelo
# nickserv_pass
# The password to use when authenticating with NickServ. Set to the empty string
# if you don't need that feature.
nickserv_pass=
# server
# The IRC server to connect to
server=irc.example.com
# port
# The TCP port to connect to on the IRC server
port=6697
# tls
# Enable TLS for the IRC connection.  Probably also in combination with
# port=6697
tls=True
# ipv6
# Force the IRC connection over IPv6. I'm not entirely sure what the underlying
# framework does with this, so maybe it falls back intelligently?
ipv6=True
# send_to
# The nick (or channel) to which to send messages
send_to=#test
# repeat_with
# Repeat the message with these strings (usually channels, although you could
# get creative with it...).  Separate items with a comma. To disable this
# behavior and just send one message, comment out this key.
;repeat_with=#channel,#channel2,#channel3
# message
# The message to send. The group {marker} will be replaced with the marker text.
# The group {special} will be replaced with a special indicator, if the marker
# has a special status. The indicator has a space before it, so take that into
# account when creating this string. If repeat_with is defined, the message will
# be repeated, each time substituting in one of the items for {item}.
message=Now Playing{special}: {marker}
# delayed
# Delay this plugin's output by the broadcast delay from above? Default True
;delayed = True

#
# plugin:audacity_labels: Configure the Audacity Labels plugin
#
[plugin:audacity_labels]
# path
# The path to write the file to. Environment variable expansion is performed on
# this string value, and "{show}" will be replaced by the show that Gelo was
# started with. Additionally, "{count}" will be replaced with a 4-character,
# zero-padded number to avoid overwriting existing files with the same name.
# Audacity expects this file to end with ".txt".
path=$HOME/Desktop/{show}-{count}.txt
# delayed
# Delay this plugin's output by the broadcast delay from above? Default False
;delayed = False

#
# plugin:http_pusher: Configure the HTTP Pusher plugin
#
[plugin:http_pusher]
# url
# The URL to connect to, with no arguments. HTTPS is supported.
url = https://example.com/now_playing
# method
# The HTTP method that the endpoint expects you to use. Currently only GET and
# POST are supported, and you should *really* be using POST.
method = POST
# api_key_param
# The argument name where the endpoint expects to find an API key, because it's
# not just exposed to the public, right? If your system is bad, comment this key
# out to disable sending an API key.
api_key_param = api_key
# api_key
# The API key to send, for authentication purposes.
api_key = nonsense
# marker_param
# The argument name where the endpoint expects to find the marker text.
marker_param = song
# delayed
# Delay this plugin's output by the broadcast delay from above? Default False
;delayed = False

#
# plugin:somafm: Configure the SomaFM plugin
#
[plugin:somafm]
# stream_url
# The URL of the SomaFM stream to connect to.  Must be a direct link, not a
# playlist link.  Also, only HTTP MP3 streams are supported, because they're
# really easy to decode metadata from.
stream_url = http://ice1.somafm.com/groovesalad-128-mp3
# source_name
# The bit in parentheses when this track is announced.
source_name = from Groove Salad on Soma.FM
# extra_delay
# A floating-point number of seconds to delay announcements for.  Useful for
# compensating for streaming delays from Soma.FM to you.
extra_delay = 1

